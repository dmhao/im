// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	LoginIm
	LogoutIm
	AuthIm
	MsgIm
	MsgImAck
	Empty
	SyncOffline
	SyncOfflineMsg
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// 用于登录
// Uid             用户uid
// Token           应用的token
// AppId           当前应用ID
// DeviceType      设备类型
type LoginIm struct {
	Uid        int64  `protobuf:"varint,1,opt,name=Uid" json:"Uid,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	AppId      int32  `protobuf:"varint,3,opt,name=AppId" json:"AppId,omitempty"`
	DeviceType int32  `protobuf:"varint,4,opt,name=DeviceType" json:"DeviceType,omitempty"`
}

func (m *LoginIm) Reset()                    { *m = LoginIm{} }
func (m *LoginIm) String() string            { return proto.CompactTextString(m) }
func (*LoginIm) ProtoMessage()               {}
func (*LoginIm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginIm) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LoginIm) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginIm) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *LoginIm) GetDeviceType() int32 {
	if m != nil {
		return m.DeviceType
	}
	return 0
}

//
// 退出登录
// Uid             用户uid
// Token           应用的token
type LogoutIm struct {
	Uid   int64  `protobuf:"varint,1,opt,name=Uid" json:"Uid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
}

func (m *LogoutIm) Reset()                    { *m = LogoutIm{} }
func (m *LogoutIm) String() string            { return proto.CompactTextString(m) }
func (*LogoutIm) ProtoMessage()               {}
func (*LogoutIm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LogoutIm) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LogoutIm) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//
// 登录的返回消息
// Status  登录状态
// Code   返回码
// Data   返回的内容
type AuthIm struct {
	Status int32  `protobuf:"varint,1,opt,name=Status" json:"Status,omitempty"`
	Code   int32  `protobuf:"varint,2,opt,name=Code" json:"Code,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=Data" json:"Data,omitempty"`
}

func (m *AuthIm) Reset()                    { *m = AuthIm{} }
func (m *AuthIm) String() string            { return proto.CompactTextString(m) }
func (*AuthIm) ProtoMessage()               {}
func (*AuthIm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AuthIm) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AuthIm) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AuthIm) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

//
// 单聊群聊消息体
// SenderId            发送方的id
// ReceiverId          接收方的id
// ChartType           (1 单聊  2群聊)
// MsgType             消息类型 (1 用户消息 2系统消息)
// MsgId               消息ID  由服务端填充
// TalkId              会话ID  第一次发送消息，会话ID由服务端填充。
// TraceId             消息调试ID
// Timestamp           消息的发送时间，  毫秒级时间戳
// Content             消息内容
type MsgIm struct {
	SenderId   int64  `protobuf:"varint,1,opt,name=SenderId" json:"SenderId,omitempty"`
	ReceiverId int64  `protobuf:"varint,2,opt,name=ReceiverId" json:"ReceiverId,omitempty"`
	ChartType  int32  `protobuf:"varint,3,opt,name=ChartType" json:"ChartType,omitempty"`
	MsgType    int32  `protobuf:"varint,4,opt,name=MsgType" json:"MsgType,omitempty"`
	MsgId      string `protobuf:"bytes,5,opt,name=MsgId" json:"MsgId,omitempty"`
	TalkId     string `protobuf:"bytes,6,opt,name=TalkId" json:"TalkId,omitempty"`
	TraceId    string `protobuf:"bytes,7,opt,name=TraceId" json:"TraceId,omitempty"`
	Timestamp  int64  `protobuf:"varint,8,opt,name=Timestamp" json:"Timestamp,omitempty"`
	Content    string `protobuf:"bytes,9,opt,name=Content" json:"Content,omitempty"`
}

func (m *MsgIm) Reset()                    { *m = MsgIm{} }
func (m *MsgIm) String() string            { return proto.CompactTextString(m) }
func (*MsgIm) ProtoMessage()               {}
func (*MsgIm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MsgIm) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *MsgIm) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *MsgIm) GetChartType() int32 {
	if m != nil {
		return m.ChartType
	}
	return 0
}

func (m *MsgIm) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *MsgIm) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *MsgIm) GetTalkId() string {
	if m != nil {
		return m.TalkId
	}
	return ""
}

func (m *MsgIm) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *MsgIm) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgIm) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

//
// 消息的Ack结构
// TraceId     消息调试ID
// MsgId       消息的id
// TalkId      会话的id
// Timestamp   消息发送时间
type MsgImAck struct {
	TraceId   string `protobuf:"bytes,1,opt,name=TraceId" json:"TraceId,omitempty"`
	MsgId     string `protobuf:"bytes,2,opt,name=MsgId" json:"MsgId,omitempty"`
	TalkId    string `protobuf:"bytes,3,opt,name=TalkId" json:"TalkId,omitempty"`
	Timestamp int64  `protobuf:"varint,4,opt,name=Timestamp" json:"Timestamp,omitempty"`
}

func (m *MsgImAck) Reset()                    { *m = MsgImAck{} }
func (m *MsgImAck) String() string            { return proto.CompactTextString(m) }
func (*MsgImAck) ProtoMessage()               {}
func (*MsgImAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MsgImAck) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *MsgImAck) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *MsgImAck) GetTalkId() string {
	if m != nil {
		return m.TalkId
	}
	return ""
}

func (m *MsgImAck) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

//
// 用于ping  pong 心跳时的空结构
type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

//
// 同步离线消息
// Limit       同步条数，  Limit为0  同步所有离线消息
type SyncOffline struct {
	Limit int32 `protobuf:"varint,1,opt,name=Limit" json:"Limit,omitempty"`
}

func (m *SyncOffline) Reset()                    { *m = SyncOffline{} }
func (m *SyncOffline) String() string            { return proto.CompactTextString(m) }
func (*SyncOffline) ProtoMessage()               {}
func (*SyncOffline) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SyncOffline) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

//
// 离线消息返回
// MsgList         返回的消息数组
// SurplusCount    剩余未同步的消息个数
type SyncOfflineMsg struct {
	MsgList      []*MsgIm `protobuf:"bytes,1,rep,name=MsgList" json:"MsgList,omitempty"`
	SurplusCount int32    `protobuf:"varint,2,opt,name=SurplusCount" json:"SurplusCount,omitempty"`
}

func (m *SyncOfflineMsg) Reset()                    { *m = SyncOfflineMsg{} }
func (m *SyncOfflineMsg) String() string            { return proto.CompactTextString(m) }
func (*SyncOfflineMsg) ProtoMessage()               {}
func (*SyncOfflineMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SyncOfflineMsg) GetMsgList() []*MsgIm {
	if m != nil {
		return m.MsgList
	}
	return nil
}

func (m *SyncOfflineMsg) GetSurplusCount() int32 {
	if m != nil {
		return m.SurplusCount
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginIm)(nil), "common.LoginIm")
	proto.RegisterType((*LogoutIm)(nil), "common.LogoutIm")
	proto.RegisterType((*AuthIm)(nil), "common.AuthIm")
	proto.RegisterType((*MsgIm)(nil), "common.MsgIm")
	proto.RegisterType((*MsgImAck)(nil), "common.MsgImAck")
	proto.RegisterType((*Empty)(nil), "common.Empty")
	proto.RegisterType((*SyncOffline)(nil), "common.SyncOffline")
	proto.RegisterType((*SyncOfflineMsg)(nil), "common.SyncOfflineMsg")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x8b, 0xdb, 0x30,
	0x10, 0xc5, 0x71, 0x1c, 0x3b, 0xc9, 0xec, 0xb6, 0x14, 0x51, 0x8a, 0x28, 0xa5, 0x04, 0xf5, 0xd0,
	0x9c, 0xf6, 0xb0, 0xfd, 0x04, 0x21, 0x5b, 0xa8, 0xc1, 0xa1, 0x20, 0xbb, 0xc7, 0x1e, 0x5c, 0x5b,
	0xeb, 0x15, 0x89, 0xfe, 0x60, 0xcb, 0x0b, 0xf9, 0xec, 0xbd, 0x14, 0x8d, 0xed, 0x8d, 0x5d, 0x7a,
	0xe8, 0x4d, 0xbf, 0x37, 0x1e, 0xcd, 0x7b, 0xf2, 0xc0, 0x6d, 0x69, 0x94, 0x32, 0xfa, 0xce, 0x36,
	0xc6, 0x19, 0x12, 0xf7, 0xc4, 0x6a, 0x58, 0xa5, 0xa6, 0x96, 0x3a, 0x51, 0xe4, 0x0d, 0x84, 0x3f,
	0x64, 0x45, 0x83, 0x6d, 0xb0, 0x0b, 0xb9, 0x3f, 0x92, 0xb7, 0x10, 0xe5, 0xe6, 0x24, 0x34, 0x5d,
	0x6c, 0x83, 0xdd, 0x86, 0xf7, 0xe0, 0xd5, 0xbd, 0xb5, 0x49, 0x45, 0xc3, 0x6d, 0xb0, 0x8b, 0x78,
	0x0f, 0xe4, 0x23, 0xc0, 0x83, 0x78, 0x96, 0xa5, 0xc8, 0x2f, 0x56, 0xd0, 0x25, 0x96, 0x26, 0x0a,
	0xbb, 0x87, 0x75, 0x6a, 0x6a, 0xd3, 0xb9, 0xff, 0x9f, 0xc4, 0xbe, 0x41, 0xbc, 0xef, 0xdc, 0x53,
	0xa2, 0xc8, 0x3b, 0x88, 0x33, 0x57, 0xb8, 0xae, 0xc5, 0xa6, 0x88, 0x0f, 0x44, 0x08, 0x2c, 0x0f,
	0xa6, 0x12, 0xd8, 0x16, 0x71, 0x3c, 0x7b, 0xed, 0xa1, 0x70, 0x05, 0xda, 0xdb, 0x70, 0x3c, 0xb3,
	0xdf, 0x01, 0x44, 0xc7, 0xb6, 0x4e, 0x14, 0x79, 0x0f, 0xeb, 0x4c, 0xe8, 0x4a, 0x34, 0xc9, 0x68,
	0xe0, 0x85, 0x7d, 0x06, 0x2e, 0x4a, 0x21, 0x9f, 0xb1, 0xba, 0xc0, 0xea, 0x44, 0x21, 0x1f, 0x60,
	0x73, 0x78, 0x2a, 0x1a, 0x87, 0x11, 0xfb, 0xf4, 0x57, 0x81, 0x50, 0x58, 0x1d, 0xdb, 0x7a, 0x12,
	0x7f, 0x44, 0x9f, 0xce, 0x0f, 0xaf, 0x68, 0xd4, 0xa7, 0x43, 0xf0, 0x99, 0xf2, 0xe2, 0x7c, 0x4a,
	0x2a, 0x1a, 0xa3, 0x3c, 0x90, 0xbf, 0x27, 0x6f, 0x8a, 0x52, 0x24, 0x15, 0x5d, 0x61, 0x61, 0x44,
	0x3f, 0x3f, 0x97, 0x4a, 0xb4, 0xae, 0x50, 0x96, 0xae, 0xd1, 0xde, 0x55, 0xf0, 0x7d, 0x07, 0xa3,
	0x9d, 0xd0, 0x8e, 0x6e, 0xfa, 0xbe, 0x01, 0x99, 0x85, 0x35, 0x86, 0xdf, 0x97, 0xa7, 0xe9, 0xed,
	0xc1, 0xfc, 0xf6, 0x17, 0x97, 0x8b, 0x7f, 0xbb, 0x0c, 0x67, 0x2e, 0x67, 0x5e, 0x96, 0x7f, 0x79,
	0x61, 0x2b, 0x88, 0xbe, 0x2a, 0xeb, 0x2e, 0xec, 0x13, 0xdc, 0x64, 0x17, 0x5d, 0x7e, 0x7f, 0x7c,
	0x3c, 0x4b, 0x8d, 0x2f, 0x91, 0x4a, 0x25, 0xdd, 0xf0, 0x1b, 0x7b, 0x60, 0x3f, 0xe1, 0xf5, 0xe4,
	0xa3, 0x63, 0x5b, 0x93, 0xcf, 0xf8, 0x96, 0xa9, 0x6c, 0xfd, 0x97, 0xe1, 0xee, 0xe6, 0xfe, 0xd5,
	0xdd, 0xb0, 0xbe, 0x18, 0x84, 0x8f, 0x55, 0xc2, 0xe0, 0x36, 0xeb, 0x1a, 0x7b, 0xee, 0xda, 0x83,
	0xe9, 0xb4, 0x1b, 0x16, 0x61, 0xa6, 0xfd, 0x8a, 0x71, 0xe5, 0xbf, 0xfc, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x15, 0x89, 0xf6, 0xda, 0x02, 0x03, 0x00, 0x00,
}
